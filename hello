










			break ;
			break ;
			break ;
			line = ft_strdup(env[i] + 5);
		free(ptr[i]);
		free(tmp);
		free(tmp);
		i++;
		i++;
		i++;
		i++;
		if (access(tmp, F_OK) == 0)
		if (access(tmp, F_OK) == 0)
		if (ft_strncmp(env[i], "PATH=", 5) == 0)
		tmp = ft_strjoin(path[i], cmd);
		tmp = ft_strjoin(path[i], cmd);
		{
		}
	(void)ac;
	av[2] = get_first_cmd(av[2], path);
	av[3] = get_second_cmd(av[3], path);
	char **path;
	char *line;
	char *line;
	char *tmp;
	char *tmp;
	double_pointer(path);
	free(line);
	free(ptr);
	i = 0;
	i = 0;
	i = 0;
	i = 0;
	int i;
	int i;
	int i;
	int i;
	line = NULL;
	line = get_path_line(env);
	path = ft_split(line, ':');
	return (line);
	return (tmp);
	return (tmp);
	tmp = NULL;
	tmp = NULL;
	while (env[i])
	while (path[i])
	while (path[i])
	while (ptr[i])
	{
	{
	{
	{
	}
	}
	}
	}
#include "pipex.h"
/*                                                                            */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*                                                    +:+ +:+         +:+     */
/*                                                +#+#+#+#+#+   +#+           */
/*   By: mabahani <marvin@42.fr>                    +#+  +:+       +#+        */
/*   Created: 2023/01/25 22:20:47 by mabahani          #+#    #+#             */
/*   Updated: 2023/01/26 00:12:32 by mabahani         ###   ########.fr       */
/*   parsing.c                                          :+:      :+:    :+:   */
/* ************************************************************************** */
/* ************************************************************************** */
char *get_first_cmd(char *cmd, char **path)
char *get_path_line(char **env)
char *get_second_cmd(char *cmd, char **path)
void double_pointer(char **ptr)
void parsing(int ac, char **av, char **env)
{
{
{
{
{
}
}
}
}
}
